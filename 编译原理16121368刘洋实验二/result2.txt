(constsym,const)
(ident,a)
(eql,=)
(number,10)
(semicolon,;)
(varsym,var)
(ident,b)
(comma,,)
(ident,c)
(semicolon,;)
(beginsym,begin)
(readsym,read)
(lapern,()
(ident,b)
(rparen,))
(semicolon,;)
(ident,c)
(becomes,:=)
(ident,a)
(plus,+)
(ident,b)
(semicolon,;)
(writesy,write)
(lapern,()
(ident,c)
(rparen,))
(endsym,end)
(period,.)
(constsym,const)
(ident,num)
(eql,=)
(number,10)
(semicolon,;)
(varsym,var)
(ident,a1)
(comma,,)
(ident,b2)
(semicolon,;)
(beginsym,begin)
(readsym,read)
(lapern,()
(ident,a1)
(rparen,))
(semicolon,;)
(ident,b2)
(becomes,:=)
(ident,a1)
(plus,+)
(ident,num)
(semicolon,;)
(constsym,const)
(ident,a)
(eql,=)
(number,12)
(semicolon,;)
(writesy,write)
(lapern,()
(ident,a1)
(comma,,)
(ident,b2)
(rparen,))
(semicolon,;)
(endsym,end)
(period,.)
(varsym,var)
(ident,a)
(comma,,)
(ident,b)
(comma,,)
(ident,c)
(comma,,)
(ident,t)
(comma,,)
(ident,tag)
(comma,,)
(ident,p)
(semicolon,;)
(beginsym,begin)
(readsym,read)
(lapern,()
(ident,a)
(rparen,))
(semicolon,;)
(readsym,read)
(lapern,()
(ident,b)
(rparen,))
(semicolon,;)
(readsym,read)
(lapern,()
(ident,c)
(rparen,))
(semicolon,;)
(ident,tag)
(eql,=)
(number,0)
(semicolon,;)
(beginsym,begin)
(ifsym,if)
(ident,a)
(gtr,>)
(ident,b)
(thensym,then)
(beginsym,begin)
(ident,t)
(becomes,:=)
(ident,a)
(semicolon,;)
(ident,a)
(becomes,:=)
(ident,b)
(semicolon,;)
(ident,b)
(becomes,:=)
(ident,t)
(semicolon,;)
(endsym,end)
(semicolon,;)
(ifsym,if)
(ident,a)
(gtr,>)
(ident,c)
(ident,thens)
(beginsym,begin)
(ident,t)
(becomes,:=)
(ident,a)
(semicolon,;)
(ident,a)
(becomes,:=)
(ident,c)
(semicolon,;)
(ident,c)
(becomes,:=)
(ident,t)
(semicolon,;)
(endsym,end)
(semicolon,;)
(ifsym,if)
(ident,b)
(gtr,>)
(ident,c)
(thensym,then)
(beginsym,begin)
(ident,t)
(becomes,:=)
(ident,b)
(semicolon,;)
(ident,b)
(becomes,:=)
(ident,c)
(semicolon,;)
(ident,c)
(becomes,:=)
(ident,t)
(semicolon,;)
(endsym,end)
(endsym,end)
(semicolon,;)
(ifsym,if)
(ident,a)
(plus,+)
(ident,b)
(gtr,>)
(ident,c)
(thensym,then)
(ident,tag)
(becomes,:=)
(number,1)
(semicolon,;)
(ifsym,if)
(ident,tag)
(eql,=)
(number,1)
(thensym,then)
(beginsym,begin)
(writesy,write)
(lapern,()
(ident,yes)
(rparen,))
(ifsym,if)
(ident,a)
(eql,=)
(ident,b)
(thensym,then)
(ident,p)
(eql,=)
(number,1)
(semicolon,;)
(ifsym,if)
(ident,b)
(eql,=)
(ident,c)
(thensym,then)
(ident,p)
(eql,=)
(number,1)
(semicolon,;)
(ifsym,if)
(ident,a)
(eql,=)
(ident,c)
(thensym,then)
(ident,p)
(eql,=)
(number,0)
(semicolon,;)
(ifsym,if)
(ident,a)
(times,*)
(ident,a)
(plus,+)
(ident,b)
(times,*)
(ident,b)
(eql,=)
(ident,c)
(times,*)
(ident,c)
(thensym,then)
(ident,p)
(eql,=)
(number,2)
(semicolon,;)
(endsym,end)
(semicolon,;)
(ifsym,if)
(ident,p)
(eql,=)
(number,0)
(thensym,then)
(writesy,write)
(lapern,()
(number,1)
(rparen,))
(ifsym,if)
(ident,p)
(eql,=)
(number,1)
(thensym,then)
(writesy,write)
(lapern,()
(number,2)
(rparen,))
(ifsym,if)
(ident,p)
(eql,=)
(number,2)
(thensym,then)
(writesy,write)
(lapern,()
(number,3)
(rparen,))
(ifsym,if)
(ident,tag)
(eql,=)
(number,0)
(thensym,then)
(writesy,write)
(lapern,()
(ident,no)
(rparen,))
(endsym,end)
(period,.)
